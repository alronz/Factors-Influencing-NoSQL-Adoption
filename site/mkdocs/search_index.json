{
    "docs": [
        {
            "location": "/", 
            "text": "Factors Influencing the Adoption of a NoSQL Solution:  A focus on the data modelling and query capabilities.\n\n\nAn attempt to analysis different NoSQL databases from different NoSQL categories in order to study and test their data modelling capabilities and query expressiveness. Furthermore, many features of each database will be investigated and documented in an easy tutorial-like approach.\n\n\n\n\nMotivation\n\n\ncontent comes here.\n\n\nInvestigated databases\n\n\ncontent comes here.\n\n\nData Modelling Testing\n\n\ncontent comes here.\n\n\nQuery Capabilities Testing\n\n\ncontent comes here.\n\n\nData Used\n\n\ncontent comes here.\n\n\nContent\n\n\nRedis\n\n\n\n\nBasics\n\n\nOverview\n\n\nInstallation\n\n\nUnderline Structure\n\n\nPossible Use Cases\n\n\nQuery Language\n\n\nTransaction Support\n\n\nData Import and Export\n\n\n\n\n\n\nData Model\n\n\nData Layout\n\n\nRelational Data Support\n\n\nNormalization/Denormalization\n\n\nNested Data Structures\n\n\nReferential Integrity\n\n\n\n\n\n\nQuery Model\n\n\nQuery Options\n\n\nFull Text Search Support\n\n\nRegular Expressions Support\n\n\nAggregation and Filtering\n\n\nIndexing\n\n\nSorting\n\n\n\n\n\n\nAdministration and Maintenance  \n\n\nConfiguration\n\n\nScalability\n\n\nPersistency\n\n\nBackup\n\n\nUpgrading\n\n\nSecurity\n\n\nAvailability\n\n\n\n\n\n\nSpecial Features\n\n\nScripting Support\n \n\n\nPub/Sub Support\n\n\nExpire Option\n\n\nRedis as a Cache\n\n\n\n\n\n\nExamples\n\n\nCart Management Service\n \n\n\nSession Management Service\n\n\nCache Service\n\n\nAnalytics Service\n\n\nJob Queue System\n\n\nHandling Relational Data\n\n\nBulk Transactions Support\n\n\nTransaction Support\n\n\n\n\n\n\nResults\n\n\nStrengths and Weaknesses\n\n\nSummary\n\n\n\n\n\n\n\n\nMongoDB\n\n\n\n\nBasics\n\n\nOverview\n\n\nInstallation\n\n\nUnderline Structure\n\n\nPossible Use Cases\n\n\nQuery Language\n\n\nTransaction Support\n\n\nData Import and Export\n\n\n\n\n\n\nData Model\n\n\nData Layout\n\n\nRelational Data Support\n\n\nNormalization/Denormalization\n\n\nNested Data Structures\n\n\nReferential Integrity\n\n\n\n\n\n\nQuery Model\n\n\nQuery Options\n\n\nFull Text Search Support\n\n\nRegular Expressions Support\n\n\nAggregation and Filtering\n\n\nIndexing\n\n\nSorting\n\n\n\n\n\n\nAdministration and Maintenance  \n\n\nConfiguration\n\n\nScalability\n\n\nPersistency\n\n\nBackup\n\n\nUpgrading\n\n\nSecurity\n\n\nAvailability\n  \n\n\n\n\n\n\nSpecial Features\n\n\nGridFS\n\n\nDocument Validation\n\n\n\n\n\n\nExamples\n\n\nTPC-H Queries\n\n\n\n\n\n\nResults\n\n\nStrengths and Weaknesses\n\n\nSummary\n\n\n\n\n\n\n\n\nNeo4j\n\n\n\n\nBasics\n\n\nOverview\n\n\nInstallation\n\n\nUnderline Structure\n\n\nPossible Use Cases\n\n\nQuery Language\n\n\nTransaction Support\n\n\nData Import and Export\n\n\n\n\n\n\nData Model\n\n\nData Layout\n\n\nRelational Data Support\n\n\nNormalization/Denormalization\n\n\nNested Data Structures\n\n\nReferential Integrity\n\n\n\n\n\n\nQuery Model\n\n\nQuery Options\n\n\nFull Text Search Support\n\n\nRegular Expressions Support\n\n\nAggregation and Filtering\n\n\nIndexing\n\n\nSorting\n\n\n\n\n\n\nAdministration and Maintenance  \n\n\nConfiguration\n\n\nScalability\n\n\nPersistency\n\n\nBackup\n\n\nUpgrading\n\n\nSecurity\n\n\nAvailability\n\n\n\n\n\n\nExamples\n\n\nTPC-H Queries\n\n\n\n\n\n\nResults\n\n\nStrengths and Weaknesses\n\n\nSummary\n\n\n\n\n\n\n\n\nCassandra\n\n\n\n\nBasics\n\n\nOverview\n\n\nInstallation\n\n\nUnderline Structure\n\n\nPossible Use Cases\n\n\nQuery Language\n\n\nTransaction Support\n\n\nData Import and Export\n\n\n\n\n\n\nData Model\n\n\nData Layout\n\n\nRelational Data Support\n\n\nNormalization/Denormalization\n\n\nNested Data Structures\n\n\nReferential Integrity\n\n\n\n\n\n\nQuery Model\n\n\nQuery Options\n\n\nFull Text Search Support\n\n\nRegular Expressions Support\n\n\nAggregation and Filtering\n\n\nIndexing\n\n\nSorting\n\n\n\n\n\n\nAdministration and Maintenance  \n\n\nConfiguration\n\n\nScalability\n\n\nPersistency\n\n\nBackup\n\n\nUpgrading\n\n\nSecurity\n\n\nAvailability\n\n\n\n\n\n\nExamples\n\n\nTPC-H Queries\n\n\n\n\n\n\nResults\n\n\nStrengths and Weaknesses\n\n\nSummary\n   \n\n\n\n\n\n\n\n\nEvaluation\n\n\ncontent comes here.\n\n\nReferences\n\n\ncontent comes here.", 
            "title": "Home"
        }, 
        {
            "location": "/#factors-influencing-the-adoption-of-a-nosql-solution-a-focus-on-the-data-modelling-and-query-capabilities", 
            "text": "An attempt to analysis different NoSQL databases from different NoSQL categories in order to study and test their data modelling capabilities and query expressiveness. Furthermore, many features of each database will be investigated and documented in an easy tutorial-like approach.", 
            "title": "Factors Influencing the Adoption of a NoSQL Solution:  A focus on the data modelling and query capabilities."
        }, 
        {
            "location": "/#motivation", 
            "text": "content comes here.", 
            "title": "Motivation"
        }, 
        {
            "location": "/#investigated-databases", 
            "text": "content comes here.", 
            "title": "Investigated databases"
        }, 
        {
            "location": "/#data-modelling-testing", 
            "text": "content comes here.", 
            "title": "Data Modelling Testing"
        }, 
        {
            "location": "/#query-capabilities-testing", 
            "text": "content comes here.", 
            "title": "Query Capabilities Testing"
        }, 
        {
            "location": "/#data-used", 
            "text": "content comes here.", 
            "title": "Data Used"
        }, 
        {
            "location": "/#content", 
            "text": "", 
            "title": "Content"
        }, 
        {
            "location": "/#redis", 
            "text": "Basics  Overview  Installation  Underline Structure  Possible Use Cases  Query Language  Transaction Support  Data Import and Export    Data Model  Data Layout  Relational Data Support  Normalization/Denormalization  Nested Data Structures  Referential Integrity    Query Model  Query Options  Full Text Search Support  Regular Expressions Support  Aggregation and Filtering  Indexing  Sorting    Administration and Maintenance    Configuration  Scalability  Persistency  Backup  Upgrading  Security  Availability    Special Features  Scripting Support    Pub/Sub Support  Expire Option  Redis as a Cache    Examples  Cart Management Service    Session Management Service  Cache Service  Analytics Service  Job Queue System  Handling Relational Data  Bulk Transactions Support  Transaction Support    Results  Strengths and Weaknesses  Summary", 
            "title": "Redis"
        }, 
        {
            "location": "/#mongodb", 
            "text": "Basics  Overview  Installation  Underline Structure  Possible Use Cases  Query Language  Transaction Support  Data Import and Export    Data Model  Data Layout  Relational Data Support  Normalization/Denormalization  Nested Data Structures  Referential Integrity    Query Model  Query Options  Full Text Search Support  Regular Expressions Support  Aggregation and Filtering  Indexing  Sorting    Administration and Maintenance    Configuration  Scalability  Persistency  Backup  Upgrading  Security  Availability       Special Features  GridFS  Document Validation    Examples  TPC-H Queries    Results  Strengths and Weaknesses  Summary", 
            "title": "MongoDB"
        }, 
        {
            "location": "/#neo4j", 
            "text": "Basics  Overview  Installation  Underline Structure  Possible Use Cases  Query Language  Transaction Support  Data Import and Export    Data Model  Data Layout  Relational Data Support  Normalization/Denormalization  Nested Data Structures  Referential Integrity    Query Model  Query Options  Full Text Search Support  Regular Expressions Support  Aggregation and Filtering  Indexing  Sorting    Administration and Maintenance    Configuration  Scalability  Persistency  Backup  Upgrading  Security  Availability    Examples  TPC-H Queries    Results  Strengths and Weaknesses  Summary", 
            "title": "Neo4j"
        }, 
        {
            "location": "/#cassandra", 
            "text": "Basics  Overview  Installation  Underline Structure  Possible Use Cases  Query Language  Transaction Support  Data Import and Export    Data Model  Data Layout  Relational Data Support  Normalization/Denormalization  Nested Data Structures  Referential Integrity    Query Model  Query Options  Full Text Search Support  Regular Expressions Support  Aggregation and Filtering  Indexing  Sorting    Administration and Maintenance    Configuration  Scalability  Persistency  Backup  Upgrading  Security  Availability    Examples  TPC-H Queries    Results  Strengths and Weaknesses  Summary", 
            "title": "Cassandra"
        }, 
        {
            "location": "/#evaluation", 
            "text": "content comes here.", 
            "title": "Evaluation"
        }, 
        {
            "location": "/#references", 
            "text": "content comes here.", 
            "title": "References"
        }, 
        {
            "location": "/Redis/Basics/Overview/", 
            "text": "Home\n\n\n\n\nRedis \n Basics \n Overview\n\n\nRedis is an extremely fast NoSQL key-value in-memory database which stores data in different useful data structures such as strings, list, sets and sorted sets. Redis is much similar to memcached but with a built-in persistence which means it can keep your data even after server restarts.  In addition, you can use more complex data types to store your data instead of just strings. Redis supports many powerful features like built-in pub/sub, transaction support with optimistic locking and Lua Scripting. Redis is a very good choice if you are looking for a very fast and highly scalable and available data store solution. In the following sections, we are going through most of the features in more details.", 
            "title": "Overview"
        }, 
        {
            "location": "/Redis/Basics/Overview/#redis-basics-overview", 
            "text": "Redis is an extremely fast NoSQL key-value in-memory database which stores data in different useful data structures such as strings, list, sets and sorted sets. Redis is much similar to memcached but with a built-in persistence which means it can keep your data even after server restarts.  In addition, you can use more complex data types to store your data instead of just strings. Redis supports many powerful features like built-in pub/sub, transaction support with optimistic locking and Lua Scripting. Redis is a very good choice if you are looking for a very fast and highly scalable and available data store solution. In the following sections, we are going through most of the features in more details.", 
            "title": "Redis &gt; Basics &gt; Overview"
        }
    ]
}